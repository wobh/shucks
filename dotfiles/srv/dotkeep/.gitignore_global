# globally ignore the following

# Emacs files
*~
\#*#
.\#*


# Elisp
## Compiled
*.elc

## Packaging
.cask


# tags
TAGS
.TAGS


# direnv
.envrc
.direnv/


# OSX desktop
.DS\_Store


# Ruby
.ruby-gemset*
.ruby-version*

bundler_stubs/
.bundler_stubs/
.bundle/

Gemfile.local
Gemfile.local.lock


# Common Lisp
*.FASL
*.fasl
*.lisp-temp


# Clojure
pom.xml
pom.xml.asc
*jar
# /lib/
/classes/
/target/
/checkouts/
.lein-deps-sum
.lein-repl-history
.lein-plugins/
.lein-failures
.nrepl-port


# Elixir
/_build
/deps
erl_crash.dump
*.ez


# Erlang
.eunit
deps
*.o
*.beam
*.plt
erl_crash.dump
ebin
rel/example_project
.concrete/DEV_MODE
.rebar


# Jekyll
_site/
.sass-cache/
.jekyll-metadata


#Java
*.class

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

# Node
## Logs
logs
*.log
npm-debug.log*

## Runtime data
pids
*.pid
*.seed

## Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

## Coverage directory used by tools like istanbul
coverage

## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

## node-waf configuration
.lock-wscript

## Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

## Dependency directory
# https://docs.npmjs.com/misc/faq#should-i-check-my-node-modules-folder-into-git
node_modules


# Octocat
# Compiled source
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages
## it's better to unpack these files and commit the raw source
## git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

## Logs and databases
*.log
*.sql
*.sqlite

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
